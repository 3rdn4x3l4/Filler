!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARR_ERROR	includes/filler.h	27;"	d
ARR_MALLOC	includes/filler.h	26;"	d
BOARD_ERROR	includes/filler.h	14;"	d
BOARD_OK	includes/filler.h	15;"	d
BUFF_SIZE	includes/filler.h	9;"	d
ERROR	includes/filler.h	28;"	d
FILLER_H	includes/filler.h	2;"	d
INVALID_INFO	includes/filler.h	20;"	d
MALLOC_FAIL	includes/filler.h	24;"	d
MALLOC_OK	includes/filler.h	23;"	d
MAX_LEN	includes/filler.h	11;"	d
NL_ERROR	includes/filler.h	21;"	d
NL_OK	includes/filler.h	22;"	d
NO_PLAYER	includes/filler.h	12;"	d
PIECE_ERROR	includes/filler.h	16;"	d
PIECE_OK	includes/filler.h	17;"	d
PLAYER_OK	includes/filler.h	13;"	d
READ_ERROR	includes/filler.h	19;"	d
STR_ERROR	includes/filler.h	25;"	d
STR_OK	includes/filler.h	18;"	d
arr	includes/filler.h	/^	char	**arr;$/;"	m	struct:s_filler
arr_b	notes	/^arr_b = arr_stock[lne1][4];$/;"	v
b_column	includes/filler.h	/^	int		b_column;$/;"	m	struct:s_filler
b_line	includes/filler.h	/^	int		b_line;$/;"	m	struct:s_filler
board	includes/filler.h	/^	char	**board;$/;"	m	struct:s_filler
can_fetch_nbr	srcs/tools.c	/^int	can_fetch_nbr(char const *const str)$/;"	f
challenger	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
fd_debug	includes/filler.h	/^	int		fd_debug;$/;"	m	struct:s_filler
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
free_alloc	srcs/main.c	/^void free_alloc(t_filler *info)$/;"	f
init_ptrs	srcs/read.c	/^void	init_ptrs(t_filler *info)$/;"	f
interactif	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
is_map	srcs/tools.c	/^int	is_map(char c)$/;"	f
is_piece	srcs/tools.c	/^int	is_piece(char c)$/;"	f
live	resources/filler_vm	/^	attr_accessor :score, :piece_char, :score, :stdin, :live, :file_name$/;"	v
main	srcs/main.c	/^int			main(void)$/;"	f
p_column	includes/filler.h	/^	int		p_column;$/;"	m	struct:s_filler
p_line	includes/filler.h	/^	int		p_line;$/;"	m	struct:s_filler
parse	srcs/read.c	/^int		parse(t_filler *info, int turn)$/;"	f
piece	includes/filler.h	/^	char 	**piece;$/;"	m	struct:s_filler
piece_char	resources/filler_vm	/^	attr_accessor :score, :piece_char, :score, :stdin, :live, :file_name$/;"	v
piece_id	includes/filler.h	/^	char	piece_id[2];$/;"	m	struct:s_filler
piece_id_op	includes/filler.h	/^	char	piece_id_op[2];$/;"	m	struct:s_filler
player	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
print_alloc	srcs/read.c	/^void	print_alloc(t_filler *info)$/;"	f
read_to_str	srcs/read.c	/^int		read_to_str(t_filler *info)$/;"	f
s_filler	includes/filler.h	/^typedef struct		s_filler$/;"	s
score	resources/filler_vm	/^	attr_accessor :score, :piece_char, :score, :stdin, :live, :file_name$/;"	v
sid	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
stdin	resources/filler_vm	/^	attr_accessor :score, :piece_char, :score, :stdin, :live, :file_name$/;"	v
stdout	resources/filler_vm	/^			self.stdin, @stdout, @wait_thr = Open3.popen2(@file_name)$/;"	v
stock	includes/filler.h	/^	char	*stock;$/;"	m	struct:s_filler
str	notes	/^strsplit main str;$/;"	v	typeref:struct:main
str_to_arr	srcs/read.c	/^int		str_to_arr(t_filler *info)$/;"	f
t_filler	includes/filler.h	/^}					t_filler;$/;"	t	typeref:struct:s_filler
time	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
verbose	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
wait_thr	resources/filler_vm	/^			self.stdin, @stdout, @wait_thr = Open3.popen2(@file_name)$/;"	v
