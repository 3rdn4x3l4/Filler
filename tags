!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARG_H	libft/includes/arg.h	14;"	d
BOARD_ERROR	filler.h	14;"	d
BOARD_OK	filler.h	15;"	d
BUFF_SIZE	filler.h	9;"	d
BUFF_SIZE	libft/includes/get_next_line.h	16;"	d
FALSE	libft/includes/libft.h	20;"	d
FILLER_H	filler.h	2;"	d
FLAGSMAX	libft/includes/arg.h	16;"	d
FT_PRINTF_H	libft/includes/ft_printf.h	14;"	d
GET_NEXT_LINE_H	libft/includes/get_next_line.h	14;"	d
INVALID_INFO	filler.h	20;"	d
LIBFT_H	libft/includes/libft.h	14;"	d
MALLOC_FAIL	filler.h	24;"	d
MALLOC_OK	filler.h	23;"	d
MAX_LEN	filler.h	11;"	d
NL_ERROR	filler.h	21;"	d
NL_OK	filler.h	22;"	d
NO_PLAYER	filler.h	12;"	d
PIECE_ERROR	filler.h	16;"	d
PIECE_OK	filler.h	17;"	d
PLAYER_OK	filler.h	13;"	d
READ_ERROR	filler.h	19;"	d
STR_OK	filler.h	18;"	d
TRUE	libft/includes/libft.h	19;"	d
add_strings	libft/srcs/float_tools.c	/^void	add_strings(char *dst, char *src, int len)$/;"	f
apply_d_rounding	libft/srcs/float_tools.c	/^void	apply_d_rounding(t_d_arrs *a_ptr, int prec)$/;"	f
apply_ld_rounding	libft/srcs/float_tools.c	/^void	apply_ld_rounding(t_ld_arrs *a_ptr, int prec)$/;"	f
arr	filler.h	/^	char	**arr;$/;"	m	struct:s_filler
arr_b	notes	/^arr_b = arr_stock[lne1][4];$/;"	v
b_column	filler.h	/^	int		b_column;$/;"	m	struct:s_filler
b_line	filler.h	/^	int		b_line;$/;"	m	struct:s_filler
board	filler.h	/^	char	**board;$/;"	m	struct:s_filler
board_content	content.c	/^int board_content(t_filler *info)$/;"	f
board_exist	content.c	/^int	board_exist(t_filler *info, char *ptr)$/;"	f
board_info	read.c	/^int		board_info(t_filler *info)$/;"	f
buffer	libft/includes/get_next_line.h	/^	char		*buffer;$/;"	m	struct:s_data
calc_len_address	libft/srcs/address_tools.c	/^int		calc_len_address(t_conv_id *s_ptr, unsigned long value)$/;"	f
calc_len_double	libft/srcs/double.c	/^int		calc_len_double(t_d_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr)$/;"	f
calc_len_hexa	libft/srcs/hexa_tools.c	/^int	calc_len_hexa(t_conv_id *s_ptr, unsigned long long value)$/;"	f
calc_len_int	libft/srcs/int_tools.c	/^int		calc_len_int(t_conv_id *s_ptr, long long int value)$/;"	f
calc_len_ldouble	libft/srcs/ldouble.c	/^int		calc_len_ldouble(t_ld_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr)$/;"	f
calc_len_octal	libft/srcs/octal_tools.c	/^int	calc_len_octal(t_conv_id *s_ptr, unsigned long long value)$/;"	f
calc_len_percent	libft/srcs/percent.c	/^int		calc_len_percent(t_conv_id *s_ptr)$/;"	f
calc_len_string	libft/srcs/string.c	/^int			calc_len_string(t_conv_id *s_ptr, char *str)$/;"	f
calc_len_unsigned	libft/srcs/unsigned_tools.c	/^int		calc_len_unsigned(t_conv_id *s_ptr, unsigned long long value)$/;"	f
can_fetch_nbr	tools.c	/^int	can_fetch_nbr(char const *const str)$/;"	f
challenger	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
check_arr	read.c	/^int		check_arr(t_filler *info, int turn)$/;"	f
check_conversion	libft/srcs/ft_dprintf.c	/^int			check_conversion(const char *str)$/;"	f
check_int_struct	libft/srcs/int_tools.c	/^int		check_int_struct(t_conv_id *ptr)$/;"	f
check_octal_struct	libft/srcs/octal_tools.c	/^int	check_octal_struct(t_conv_id *s_ptr)$/;"	f
check_special_value	libft/srcs/special.c	/^int		check_special_value(t_s_e_m *dble_ptr)$/;"	f
check_unsigned_struct	libft/srcs/unsigned_tools.c	/^int		check_unsigned_struct(t_conv_id *ptr)$/;"	f
cntent	libft/includes/libft.h	/^	void						*cntent;$/;"	m	struct:s_double_linked_list
content	libft/includes/libft.h	/^	void			*content;$/;"	m	struct:s_list
content_size	libft/includes/libft.h	/^	size_t			content_size;$/;"	m	struct:s_list
conv	libft/includes/arg.h	/^	char	conv;$/;"	m	struct:s_conv_info
conv_path	libft/srcs/ft_dprintf.c	/^t_point		conv_path(int fd, const char *fmt, va_list *arg_ptr)$/;"	f
divide_str_by_two	libft/srcs/float_tools.c	/^void	divide_str_by_two(char *str, int len)$/;"	f
double_exponant	libft/srcs/double_tools.c	/^void	double_exponant(t_s_e_m *dble_ptr, t_d_arrs *a_ptr)$/;"	f
double_mantissa	libft/srcs/double_tools.c	/^void	double_mantissa(t_s_e_m *dble_ptr, t_d_arrs *a_ptr)$/;"	f
double_rounding	libft/srcs/double_tools.c	/^void	double_rounding(t_d_arrs *a_ptr, t_conv_id *s_ptr)$/;"	f
e	libft/includes/arg.h	/^	unsigned short		e;$/;"	m	struct:s_double
fd	libft/includes/arg.h	/^	int		fd;$/;"	m	struct:s_conv_info
fd	libft/includes/get_next_line.h	/^	int			fd;$/;"	m	struct:s_data
fd_debug	filler.h	/^	int		fd_debug;$/;"	m	struct:s_filler
fill_arr	libft/srcs/func_selector.c	/^void			fill_arr(t_conv_func *arr)$/;"	f
fill_d_tabs	libft/srcs/double_tools.c	/^void	fill_d_tabs(t_d_arrs *a_ptr, t_s_e_m *dble_ptr, t_conv_id *s_ptr)$/;"	f
fill_ld_tabs	libft/srcs/ldouble_tools.c	/^void	fill_ld_tabs(t_ld_arrs *a_ptr, t_s_e_m *dble_ptr, t_conv_id *s_ptr)$/;"	f
fill_line	libft/srcs/get_next_line.c	/^char	*fill_line(t_data *current, char **line, int old_chars)$/;"	f
flag	libft/srcs/pflags.c	/^int		flag(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
flags	libft/includes/arg.h	/^	char	flags;$/;"	m	struct:s_conv_info
flags_in_struct	libft/srcs/pflags.c	/^void	flags_in_struct(char c, t_conv_id *struct_ptr)$/;"	f
format	libft/tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
free_alloc	main.c	/^void free_alloc(t_filler *info)$/;"	f
free_exit	libft/srcs/get_next_line.c	/^void	free_exit(t_list **head, t_data *current)$/;"	f
ft_2lstadd_first	libft/srcs/ft_2lstadd_first.c	/^void	ft_2lstadd_first(t_2list **alst, t_2list *new)$/;"	f
ft_2lstadd_last	libft/srcs/ft_2lstadd_last.c	/^void	ft_2lstadd_last(t_2list **alst, t_2list *new)$/;"	f
ft_2lstdel	libft/srcs/ft_2lstdel.c	/^void	ft_2lstdel(t_2list **alst, void (*del)(void *))$/;"	f
ft_2lstdelnext	libft/srcs/ft_2lstdelnext.c	/^void	ft_2lstdelnext(t_2list **alst, void (*del)(void *))$/;"	f
ft_2lstdelone	libft/srcs/ft_2lstdelone.c	/^void	ft_2lstdelone(t_2list **alst, void (*del)(void *))$/;"	f
ft_2lstnew	libft/srcs/ft_2lstnew.c	/^t_2list	*ft_2lstnew(void const *cntent, size_t cntent_size)$/;"	f
ft_atoi	libft/srcs/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_bzero	libft/srcs/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_conv_address	libft/srcs/address.c	/^int		ft_conv_address(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_char	libft/srcs/char.c	/^int	ft_conv_char(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_double	libft/srcs/float.c	/^int		ft_conv_double(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_float	libft/srcs/float.c	/^int		ft_conv_float(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_hexa	libft/srcs/hexa.c	/^int		ft_conv_hexa(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_hexa_upper	libft/srcs/hexa_upper.c	/^int		ft_conv_hexa_upper(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_int	libft/srcs/int.c	/^int		ft_conv_int(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_ldouble	libft/srcs/float.c	/^int		ft_conv_ldouble(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_octal	libft/srcs/octal.c	/^int		ft_conv_octal(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_percent	libft/srcs/percent.c	/^int		ft_conv_percent(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_string	libft/srcs/string.c	/^int			ft_conv_string(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_conv_unsigned	libft/srcs/unsigned.c	/^int		ft_conv_unsigned(t_conv_id *s_ptr, va_list *arg_ptr)$/;"	f
ft_count_words	libft/srcs/ft_strsplit.c	/^static int	ft_count_words(char const *s, char c)$/;"	f	file:
ft_double_special	libft/srcs/special.c	/^int		ft_double_special(t_conv_id *s_ptr, t_s_e_m *dble)$/;"	f
ft_dprintf	libft/srcs/ft_dprintf.c	/^int			ft_dprintf(int fd, const char *format, ...)$/;"	f
ft_isalnum	libft/srcs/ft_isalnum.c	/^uint8_t	ft_isalnum(const int c)$/;"	f
ft_isalpha	libft/srcs/ft_isalpha.c	/^uint8_t	ft_isalpha(const int c)$/;"	f
ft_isascii	libft/srcs/ft_isascii.c	/^uint8_t	ft_isascii(const int c)$/;"	f
ft_isdigit	libft/srcs/ft_isdigit.c	/^uint8_t	ft_isdigit(const int c)$/;"	f
ft_isprint	libft/srcs/ft_isprint.c	/^uint8_t	ft_isprint(const int c)$/;"	f
ft_itoa	libft/srcs/ft_itoa.c	/^char		*ft_itoa(int n)$/;"	f
ft_itoa_base	libft/srcs/ft_itoa_base.c	/^char	*ft_itoa_base(int value, int base)$/;"	f
ft_longd_special	libft/srcs/special.c	/^int		ft_longd_special(t_conv_id *s_ptr, t_s_e_m *dble)$/;"	f
ft_lstadd	libft/srcs/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *new)$/;"	f
ft_lstdel	libft/srcs/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void*, size_t))$/;"	f
ft_lstdelone	libft/srcs/ft_lstdelone.c	/^void	ft_lstdelone(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstiter	libft/srcs/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstmap	libft/srcs/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	libft/srcs/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_memalloc	libft/srcs/ft_memalloc.c	/^void	*ft_memalloc(const size_t size)$/;"	f
ft_memccpy	libft/srcs/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	libft/srcs/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/srcs/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/srcs/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memdel	libft/srcs/ft_memdel.c	/^void	ft_memdel(void **ap)$/;"	f
ft_memjoin	libft/srcs/ft_memjoin.c	/^void	*ft_memjoin(void *s1, size_t n1, void *s2, size_t n2)$/;"	f
ft_memmove	libft/srcs/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	libft/srcs/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_need_trim	libft/srcs/ft_strtrim.c	/^static	int		ft_need_trim(char const *s, int len)$/;"	f	file:
ft_printf	libft/srcs/ft_printf.c	/^int			ft_printf(const char *format, ...)$/;"	f
ft_putchar	libft/srcs/ft_putchar.c	/^void	ft_putchar(char c)$/;"	f
ft_putchar_fd	libft/srcs/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl	libft/srcs/ft_putendl.c	/^void	ft_putendl(char const *s)$/;"	f
ft_putendl_fd	libft/srcs/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putnbr	libft/srcs/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f
ft_putnbr_fd	libft/srcs/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr	libft/srcs/ft_putstr.c	/^void	ft_putstr(char const *s)$/;"	f
ft_putstr_fd	libft/srcs/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f
ft_strcat	libft/srcs/ft_strcat.c	/^char	*ft_strcat(char *s1, const char *s2)$/;"	f
ft_strchr	libft/srcs/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strclr	libft/srcs/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f
ft_strcmp	libft/srcs/ft_strcmp.c	/^int	ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcpy	libft/srcs/ft_strcpy.c	/^char	*ft_strcpy(char *dst, const char *src)$/;"	f
ft_strdel	libft/srcs/ft_strdel.c	/^void	ft_strdel(char **as)$/;"	f
ft_strdup	libft/srcs/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strequ	libft/srcs/ft_strequ.c	/^int	ft_strequ(char const *s1, char const *s2)$/;"	f
ft_striter	libft/srcs/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	libft/srcs/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	libft/srcs/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strjoinfree	libft/srcs/ft_strjoinfree.c	/^char	*ft_strjoinfree(char *s1, char *s2, char code)$/;"	f
ft_strlcat	libft/srcs/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	libft/srcs/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f
ft_strmap	libft/srcs/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	libft/srcs/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncat	libft/srcs/ft_strncat.c	/^char	*ft_strncat(char *s1, const char *s2, size_t n)$/;"	f
ft_strncmp	libft/srcs/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncpy	libft/srcs/ft_strncpy.c	/^char	*ft_strncpy(char *dst, const char *src, size_t len)$/;"	f
ft_strnequ	libft/srcs/ft_strnequ.c	/^int	ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnew	libft/srcs/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f
ft_strnstr	libft/srcs/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	libft/srcs/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strsplit	libft/srcs/ft_strsplit.c	/^char		**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	libft/srcs/ft_strstr.c	/^char	*ft_strstr(const char *haystack, const char *needle)$/;"	f
ft_strsub	libft/srcs/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int start, size_t len)$/;"	f
ft_strtrim	libft/srcs/ft_strtrim.c	/^char			*ft_strtrim(char const *s)$/;"	f
ft_tolower	libft/srcs/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f
ft_toupper	libft/srcs/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f
ft_wordlen	libft/srcs/ft_strsplit.c	/^static int	ft_wordlen(char const *s, char c)$/;"	f	file:
ftoa_double	libft/srcs/double.c	/^int		ftoa_double(t_s_e_m *dble, t_conv_id *s_ptr)$/;"	f
ftoa_ldouble	libft/srcs/ldouble.c	/^int		ftoa_ldouble(t_s_e_m *dble, t_conv_id *s_ptr)$/;"	f
get_address_value	libft/srcs/address_tools.c	/^void	get_address_value(unsigned long *val_ptr, va_list *arg_ptr)$/;"	f
get_double_value	libft/srcs/double_tools.c	/^void	get_double_value(va_list *arg_ptr, t_s_e_m *dble_ptr)$/;"	f
get_func	libft/srcs/func_selector.c	/^t_conv_func		get_func(char c)$/;"	f
get_int_value	libft/srcs/int_tools.c	/^void	get_int_value(long long int *val_ptr, va_list *arg_ptr,$/;"	f
get_ldouble_value	libft/srcs/ldouble_tools.c	/^void	get_ldouble_value(va_list *arg_ptr, t_s_e_m *dble_ptr)$/;"	f
get_next_line	libft/srcs/get_next_line.c	/^int		get_next_line(int fd, char **line)$/;"	f
get_unsigned_value	libft/srcs/unsigned_tools.c	/^void	get_unsigned_value(unsigned long long *val_ptr, va_list *arg_ptr,$/;"	f
init	libft/srcs/get_next_line.c	/^t_data	*init(int fd, t_list **alst)$/;"	f
int_len	libft/srcs/int_tools.c	/^int		int_len(long long int val)$/;"	f
interactif	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
is_map	tools.c	/^int	is_map(char c)$/;"	f
is_piece	piece.c	/^int	is_piece(char c)$/;"	f
is_piece	tools.c	/^int	is_piece(char c)$/;"	f
ldouble_exponant	libft/srcs/ldouble_tools.c	/^void	ldouble_exponant(t_s_e_m *dble_ptr, t_ld_arrs *a_ptr)$/;"	f
ldouble_mantissa	libft/srcs/ldouble_tools.c	/^void	ldouble_mantissa(unsigned long long mant, t_ld_arrs *a_ptr)$/;"	f
ldouble_rounding	libft/srcs/ldouble_tools.c	/^void	ldouble_rounding(t_ld_arrs *a_ptr, t_conv_id *s_ptr)$/;"	f
len_f	libft/includes/arg.h	/^	int		len_f;$/;"	m	struct:s_double_arrs
len_f	libft/includes/arg.h	/^	int		len_f;$/;"	m	struct:s_long_double_arrs
len_i	libft/includes/arg.h	/^	int		len_i;$/;"	m	struct:s_double_arrs
len_i	libft/includes/arg.h	/^	int		len_i;$/;"	m	struct:s_long_double_arrs
len_modif1	libft/includes/arg.h	/^	char	len_modif1;$/;"	m	struct:s_conv_info
len_modif2	libft/includes/arg.h	/^	char	len_modif2;$/;"	m	struct:s_conv_info
len_modifier	libft/srcs/plenmodifier.c	/^int	len_modifier(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
len_modifier_in_struct	libft/srcs/plenmodifier.c	/^int	len_modifier_in_struct(char *ptr, int len, t_conv_id *struct_ptr)$/;"	f
live	resources/filler_vm	/^	attr_accessor :score, :piece_char, :score, :stdin, :live, :file_name$/;"	v
longd_special_value	libft/srcs/special.c	/^int		longd_special_value(t_s_e_m *dble_ptr)$/;"	f
loop	libft/srcs/ft_dprintf.c	/^int			loop(int fd, const char *fmt, va_list *arg_ptr, int written)$/;"	f
m	libft/includes/arg.h	/^	unsigned long long	m;$/;"	m	struct:s_double
main	main.c	/^int			main(void)$/;"	f
minus_flag_address	libft/srcs/address.c	/^void	minus_flag_address(t_conv_id *s_ptr, int len, unsigned long nb)$/;"	f
minus_flag_double	libft/srcs/double.c	/^void	minus_flag_double(t_d_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr,$/;"	f
minus_flag_hexa	libft/srcs/hexa.c	/^void	minus_flag_hexa(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
minus_flag_hexa_upper	libft/srcs/hexa_upper.c	/^void	minus_flag_hexa_upper(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
minus_flag_ldouble	libft/srcs/ldouble.c	/^void	minus_flag_ldouble(t_ld_arrs *a_ptr, t_conv_id *s_ptr,$/;"	f
minus_flag_percent	libft/srcs/percent.c	/^void	minus_flag_percent(t_conv_id *s_ptr, int len)$/;"	f
minus_flag_unsigned	libft/srcs/unsigned.c	/^void	minus_flag_unsigned(t_conv_id *s_ptr, int len,$/;"	f
minus_int	libft/srcs/int.c	/^void	minus_int(t_conv_id *s_ptr, int len, long long int nb)$/;"	f
minus_octal	libft/srcs/octal.c	/^void	minus_octal(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
minus_special_value	libft/srcs/special_tools.c	/^void	minus_special_value(t_s_e_m *dble_ptr, t_conv_id *s_ptr)$/;"	f
minus_string	libft/srcs/string.c	/^void		minus_string(t_conv_id *s_ptr, int len, char *str)$/;"	f
multiply_str_by_two	libft/srcs/float_tools.c	/^void	multiply_str_by_two(char *str, int len)$/;"	f
next	libft/includes/libft.h	/^	struct s_double_linked_list	*next;$/;"	m	struct:s_double_linked_list	typeref:struct:s_double_linked_list::s_double_linked_list
next	libft/includes/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
no_flag_address	libft/srcs/address.c	/^void	no_flag_address(t_conv_id *s_ptr, int len, unsigned long nb)$/;"	f
no_flag_double	libft/srcs/double.c	/^void	no_flag_double(t_d_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr,$/;"	f
no_flag_hexa	libft/srcs/hexa.c	/^void	no_flag_hexa(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
no_flag_hexa_upper	libft/srcs/hexa_upper.c	/^void	no_flag_hexa_upper(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
no_flag_int	libft/srcs/int.c	/^void	no_flag_int(t_conv_id *s_ptr, int len, long long int nb)$/;"	f
no_flag_ldouble	libft/srcs/ldouble.c	/^void	no_flag_ldouble(t_ld_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr,$/;"	f
no_flag_octal	libft/srcs/octal.c	/^void	no_flag_octal(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
no_flag_percent	libft/srcs/percent.c	/^void	no_flag_percent(t_conv_id *s_ptr, int len)$/;"	f
no_flag_string	libft/srcs/string.c	/^void		no_flag_string(t_conv_id *s_ptr, int len, char *str)$/;"	f
no_flag_unsigned	libft/srcs/unsigned.c	/^void	no_flag_unsigned(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
null_ptr	libft/srcs/address.c	/^int		null_ptr(t_conv_id *s_ptr, int len)$/;"	f
null_ptr_zero	libft/srcs/address.c	/^int		null_ptr_zero(t_conv_id *s_ptr, int len)$/;"	f
null_string	libft/srcs/string.c	/^int			null_string(t_conv_id *s_ptr)$/;"	f
output	libft/includes/arg.h	/^	char	*output;$/;"	m	struct:s_conv_info
p_column	filler.h	/^	int		p_column;$/;"	m	struct:s_filler
p_line	filler.h	/^	int		p_line;$/;"	m	struct:s_filler
parse	read.c	/^int		parse(t_filler *info, int turn)$/;"	f
parsing	libft/srcs/ft_dprintf.c	/^int			parsing(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
piece	filler.h	/^	char 	**piece;$/;"	m	struct:s_filler
piece_char	resources/filler_vm	/^	attr_accessor :score, :piece_char, :score, :stdin, :live, :file_name$/;"	v
piece_content	content.c	/^int piece_content(t_filler *info)$/;"	f
piece_content	piece.c	/^int piece_content(t_filler *info)$/;"	f
piece_id	filler.h	/^	char	piece_id[2];$/;"	m	struct:s_filler
piece_id_op	filler.h	/^	char	piece_id_op[2];$/;"	m	struct:s_filler
piece_info	piece.c	/^int		piece_info(t_filler *info)$/;"	f
piece_info	read.c	/^int		piece_info(t_filler *info)$/;"	f
player	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
player_info	read.c	/^int		player_info(t_filler *info, int turn)$/;"	f
precision	libft/includes/arg.h	/^	int		precision;$/;"	m	struct:s_conv_info
precision	libft/srcs/pprecision.c	/^int		precision(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
precision_in_struct	libft/srcs/pprecision.c	/^void	precision_in_struct(char c, t_conv_id *struct_ptr)$/;"	f
previous	libft/includes/libft.h	/^	struct s_double_linked_list *previous;$/;"	m	struct:s_double_linked_list	typeref:struct:s_double_linked_list::s_double_linked_list
read	libft/includes/arg.h	/^	int	read;$/;"	m	struct:s_point
read_to_str	read.c	/^int		read_to_str(t_filler *info)$/;"	f
read_until	libft/srcs/get_next_line.c	/^int		read_until(t_data *current)$/;"	f
reallign_board	read.c	/^void		reallign_board(t_filler *info)$/;"	f
s	libft/includes/arg.h	/^	char				s;$/;"	m	struct:s_double
s_conv_info	libft/includes/arg.h	/^typedef struct	s_conv_info$/;"	s
s_data	libft/includes/get_next_line.h	/^typedef struct	s_data$/;"	s
s_double	libft/includes/arg.h	/^typedef struct	s_double$/;"	s
s_double_arrs	libft/includes/arg.h	/^typedef struct	s_double_arrs$/;"	s
s_double_linked_list	libft/includes/libft.h	/^typedef struct	s_double_linked_list$/;"	s
s_filler	filler.h	/^typedef struct		s_filler$/;"	s
s_list	libft/includes/libft.h	/^typedef struct	s_list$/;"	s
s_long_double_arrs	libft/includes/arg.h	/^typedef struct	s_long_double_arrs$/;"	s
s_point	libft/includes/arg.h	/^typedef struct	s_point$/;"	s
score	resources/filler_vm	/^	attr_accessor :score, :piece_char, :score, :stdin, :live, :file_name$/;"	v
sid	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
special_value	libft/srcs/special_tools.c	/^void	special_value(t_s_e_m *dble_ptr, t_conv_id *s_ptr, int len)$/;"	f
stdin	resources/filler_vm	/^	attr_accessor :score, :piece_char, :score, :stdin, :live, :file_name$/;"	v
stdout	resources/filler_vm	/^			self.stdin, @stdout, @wait_thr = Open3.popen2(@file_name)$/;"	v
stock	filler.h	/^	char	*stock;$/;"	m	struct:s_filler
str	libft/includes/arg.h	/^	char				*str;$/;"	m	struct:s_double
str	notes	/^strsplit main str;$/;"	v	typeref:struct:main
str_fill_char	libft/srcs/global_tools.c	/^int	str_fill_char(char *str, char c, int len)$/;"	f
str_to_arr	read.c	/^int		str_to_arr(t_filler *info)$/;"	f
t_2list	libft/includes/libft.h	/^}				t_2list;$/;"	t	typeref:struct:s_double_linked_list
t_conv_func	libft/includes/arg.h	/^typedef int		(*t_conv_func)(t_conv_id *struct_ptr, va_list *arg_ptr);$/;"	t
t_conv_id	libft/includes/arg.h	/^}				t_conv_id;$/;"	t	typeref:struct:s_conv_info
t_d_arrs	libft/includes/arg.h	/^}				t_d_arrs;$/;"	t	typeref:struct:s_double_arrs
t_data	libft/includes/get_next_line.h	/^}				t_data;$/;"	t	typeref:struct:s_data
t_filler	filler.h	/^}					t_filler;$/;"	t	typeref:struct:s_filler
t_ld_arrs	libft/includes/arg.h	/^}				t_ld_arrs;$/;"	t	typeref:struct:s_long_double_arrs
t_list	libft/includes/libft.h	/^}				t_list;$/;"	t	typeref:struct:s_list
t_point	libft/includes/arg.h	/^}				t_point;$/;"	t	typeref:struct:s_point
t_s_e_m	libft/includes/arg.h	/^}				t_s_e_m;$/;"	t	typeref:struct:s_double
tab	libft/includes/arg.h	/^	char	tab[1500];$/;"	m	struct:s_double_arrs
tab	libft/includes/arg.h	/^	char	tab[21500];$/;"	m	struct:s_long_double_arrs
time	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
tmp	libft/includes/arg.h	/^	char	tmp[1500];$/;"	m	struct:s_double_arrs
tmp	libft/includes/arg.h	/^	char	tmp[21500];$/;"	m	struct:s_long_double_arrs
total	libft/includes/arg.h	/^	char	*total;$/;"	m	struct:s_double_arrs
total	libft/includes/arg.h	/^	char	*total;$/;"	m	struct:s_long_double_arrs
unsigned_len_base	libft/srcs/global_tools.c	/^int	unsigned_len_base(unsigned long long val, unsigned base)$/;"	f
verbose	resources/filler_vm	/^	attr_accessor :map, :player, :challenger, :interactif, :sid, :verbose, :time, :modif_time$/;"	v
wait_thr	resources/filler_vm	/^			self.stdin, @stdout, @wait_thr = Open3.popen2(@file_name)$/;"	v
width	libft/includes/arg.h	/^	int		width;$/;"	m	struct:s_conv_info
width	libft/srcs/pwidth.c	/^int		width(char *ptr, int end, t_conv_id *struct_ptr)$/;"	f
width_in_struct	libft/srcs/pwidth.c	/^void	width_in_struct(char c, t_conv_id *struct_ptr)$/;"	f
written	libft/includes/arg.h	/^	int	written;$/;"	m	struct:s_point
zero_flag_double	libft/srcs/double.c	/^void	zero_flag_double(t_d_arrs *a_ptr, t_conv_id *s_ptr, t_s_e_m *dble_ptr,$/;"	f
zero_flag_hexa	libft/srcs/hexa.c	/^void	zero_flag_hexa(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
zero_flag_hexa_upper	libft/srcs/hexa_upper.c	/^void	zero_flag_hexa_upper(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
zero_flag_ldouble	libft/srcs/ldouble.c	/^void	zero_flag_ldouble(t_ld_arrs *a_ptr, t_conv_id *s_ptr,$/;"	f
zero_flag_unsigned	libft/srcs/unsigned.c	/^void	zero_flag_unsigned(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
zero_no_prec_int	libft/srcs/int.c	/^void	zero_no_prec_int(t_conv_id *s_ptr, int len, long long int nb)$/;"	f
zero_no_prec_octal	libft/srcs/octal.c	/^void	zero_no_prec_octal(t_conv_id *s_ptr, int len, unsigned long long nb)$/;"	f
zero_zero_hexa	libft/srcs/hexa.c	/^void	zero_zero_hexa(t_conv_id *s_ptr, int len)$/;"	f
zero_zero_hexa_upper	libft/srcs/hexa_upper.c	/^void	zero_zero_hexa_upper(t_conv_id *s_ptr, int len)$/;"	f
zero_zero_int	libft/srcs/int.c	/^void	zero_zero_int(t_conv_id *s_ptr, int len)$/;"	f
zero_zero_octal	libft/srcs/octal.c	/^void	zero_zero_octal(t_conv_id *s_ptr, int len)$/;"	f
zero_zero_unsigned	libft/srcs/unsigned.c	/^void	zero_zero_unsigned(t_conv_id *s_ptr, int len)$/;"	f
